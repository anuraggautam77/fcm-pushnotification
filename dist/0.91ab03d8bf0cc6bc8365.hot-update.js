webpackHotUpdate(0,{81:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pubsubJs = __webpack_require__(12);\n\nvar _pubsubJs2 = _interopRequireDefault(_pubsubJs);\n\nvar _profilecard = __webpack_require__(82);\n\nvar _profilecard2 = _interopRequireDefault(_profilecard);\n\nvar _subscription = __webpack_require__(84);\n\nvar _subscription2 = _interopRequireDefault(_subscription);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MainPage = function (_Component) {\n    _inherits(MainPage, _Component);\n\n    function MainPage(props) {\n        _classCallCheck(this, MainPage);\n\n        var _this = _possibleConstructorReturn(this, (MainPage.__proto__ || Object.getPrototypeOf(MainPage)).call(this, props));\n\n        _this.state = {\n            currentuser: window.localStorage.getItem('userid'),\n            isnotify: 'dn',\n            alertmessage: '',\n            lng: '',\n            lat: '',\n            message: '',\n            city: ''\n\n        };\n        _pubsubJs2.default.subscribe('LANDING_MESSGAE', function (type, message) {\n            _this.setState({ \"alertmessage\": message, isnotify: 'alert alert-success bd' });\n        });\n\n        _pubsubJs2.default.subscribe('IS_LOGOUT', function (type, message) {\n            _this.setState({ \"currentuser\": false });\n        });\n\n        _this.handleCurrentLocation = _this.handleCurrentLocation.bind(_this);\n        _this.handleDyanamicLocation = _this.handleDyanamicLocation.bind(_this);\n\n        return _this;\n    }\n\n    _createClass(MainPage, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            if (this.state.currentuser !== null) {\n\n                fetch('/api/getsetlocation/' + this.state.currentuser, {\n                    method: 'get',\n                    headers: { 'Content-Type': 'application/json' }\n                }).then(function (res) {\n                    return res.json();\n                }).then(function (json) {\n\n                    if (json.list.length > 0) {\n                        window.localStorage.setItem('plat-log', json.list.plat + \"--\" + json.list.plng);\n                        window.localStorage.setItem('lat-log', json.list.lat + \"--\" + json.list.lng);\n                        window.localStorage.setItem('pzipcodes', json.list.pzipcodes);\n                        window.localStorage.setItem('zipcodes', json.list.zipcodes);\n                    }\n\n                    if (document.getElementById('id_address')) {\n                        _this2.initialize();\n                        _this2.setAutoComplete();\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize() {\n            this.drawMap();\n        }\n    }, {\n        key: 'setAutoComplete',\n        value: function setAutoComplete() {\n            var _this3 = this;\n\n            var input = document.getElementById('id_address');\n            var options = {\n                types: ['address']\n            };\n\n            var autocomplete = new google.maps.places.Autocomplete(input, options);\n            google.maps.event.addListener(autocomplete, 'place_changed', function (i, k) {\n                var place = autocomplete.getPlace();\n                // window.localStorage.setItem('lat-log', place.geometry.location.lat() + \"--\" + place.geometry.location.lng())\n                var zipcodes = _this3.getZipcode(place);\n                console.log(\"onchange\", zipcodes);\n                _this3.setState({ \"zipcodes\": zipcodes, \"lat\": place.geometry.location.lat(), \"lng\": place.geometry.location.lng() });\n                _this3.drawMap(place.geometry.location.lat(), place.geometry.location.lng());\n            });\n        }\n    }, {\n        key: 'getZipcode',\n        value: function getZipcode(place) {\n\n            var zipcodes = [];\n\n            if (Array.isArray(place)) {\n                for (var k = 0; k < place.length; k++) {\n                    for (var i = 0; i < place[k].address_components.length; i++) {\n                        for (var j = 0; j < place[k].address_components[i].types.length; j++) {\n                            if (place[k].address_components[i].types[j] == \"postal_code\") {\n                                // console.log(place[k].address_components[i].long_name);\n                                zipcodes.push(place[k].address_components[i].long_name);\n                            }\n                        }\n                    }\n                }\n            } else {\n                for (var i = 0; i < place.address_components.length; i++) {\n                    for (var j = 0; j < place.address_components[i].types.length; j++) {\n                        if (place.address_components[i].types[j] == \"postal_code\") {\n                            // console.log(place.address_components[i].long_name);\n                            zipcodes.push(place.address_components[i].long_name);\n                        }\n                    }\n                }\n            }\n            console.log(zipcodes);\n            return zipcodes;\n        }\n    }, {\n        key: 'drawMap',\n        value: function drawMap(lt, lg) {\n\n            var lat,\n                lng = '';\n            if (lt !== undefined && lt !== undefined) {\n                lat = lt;\n                lng = lg;\n            } else {\n                if (window.localStorage.getItem('lat-log') !== null) {\n                    lat = window.localStorage.getItem('lat-log').split('--')[0];\n                    lng = window.localStorage.getItem('lat-log').split('--')[1];\n                } else if (window.localStorage.getItem('plat-log') !== null) {\n                    lat = window.localStorage.getItem('plat-log').split('--')[0];\n                    lng = window.localStorage.getItem('plat-log').split('--')[1];\n                }\n            }\n\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), {\n                center: new google.maps.LatLng(parseFloat(lat), parseFloat(lng)),\n                zoom: 13\n            });\n        }\n    }, {\n        key: 'handleDyanamicLocation',\n        value: function handleDyanamicLocation() {\n            var _this4 = this;\n\n            if (this.state.lat !== '' && this.state.lng !== '') {\n                fetch('/api/whereiam', { method: 'post', headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        platlng: this.state.lat + '--' + this.state.lng,\n                        pzipcodes: this.state.zipcodes,\n                        userId: window.localStorage.getItem('userid'),\n                        token: window.localStorage.getItem('deviceToken')\n                    })\n                }).then(function (res) {\n                    return res.json();\n                }).then(function (json) {\n                    window.localStorage.setItem('pzipcodes', _this4.state.zipcodes);\n                    window.localStorage.setItem('plat-log', _this4.state.lat + '--' + _this4.state.lng);\n                    _this4.setState({ isnotify: 'alert alert-success bd', \"alertmessage\": 'Set Dyanamic location Scucessfully!!' });\n                    //Store in IndexDB\n                    store.storeinIdb();\n                });\n            }\n        }\n    }, {\n        key: 'handleCurrentLocation',\n        value: function handleCurrentLocation() {\n            var _this5 = this;\n\n            if (this.state.lat !== '' && this.state.lng !== '') {\n                fetch('/api/setnewlocation', { method: 'post', headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        latlng: this.state.lat + '--' + this.state.lng,\n                        zipcodes: this.state.zipcodes,\n                        userId: window.localStorage.getItem('userid'),\n                        token: window.localStorage.getItem('deviceToken')\n                    })\n                }).then(function (res) {\n                    return res.json();\n                }).then(function (json) {\n                    console.log(json);\n                    if (json.status === '200') {\n                        window.localStorage.setItem('zipcodes', _this5.state.zipcodes);\n                        window.localStorage.setItem('lat-log', _this5.state.lat + '--' + _this5.state.lng);\n                        _this5.setState({ isnotify: 'alert alert-success bd', \"alertmessage\": 'Set new location Scucessfully!!' });\n                        //Store in IndexDB\n                        //  store.storeinIdb();\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this6 = this;\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'main-landing row content' },\n                _react2.default.createElement('div', { className: 'banner-container' }),\n                _react2.default.createElement(\n                    'div',\n                    { className: ' ' + this.state.isnotify + ' ' },\n                    _react2.default.createElement(\n                        'strong',\n                        null,\n                        this.state.alertmessage\n                    )\n                ),\n                function () {\n                    if (_this6.state.currentuser) {\n                        return _react2.default.createElement(\n                            'div',\n                            { className: 'landing-page' },\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-6 col-sm-6' },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'title-col' },\n                                    'IQOS - Want to get notified about nearby Mobile Stores?'\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'panel panel-default' },\n                                    _react2.default.createElement(\n                                        'div',\n                                        { className: 'panel-heading' },\n                                        _react2.default.createElement(\n                                            'h5',\n                                            null,\n                                            _react2.default.createElement(\n                                                'b',\n                                                null,\n                                                'Please share your location. Application will auto notify, when we have Mobile store nearby'\n                                            ),\n                                            ' '\n                                        )\n                                    ),\n                                    _react2.default.createElement(\n                                        'div',\n                                        { className: 'panel-heading' },\n                                        _react2.default.createElement('br', null),\n                                        _react2.default.createElement('input', { ref: 'cityname', id: 'id_address', className: 'form-control input-first places-autocomplete', type: 'text', placeholder: 'City Name,Country Name' }),\n                                        _react2.default.createElement('br', null),\n                                        _react2.default.createElement(\n                                            'button',\n                                            { className: 'btn btn-primary crntlo', ref: 'crntloc', onClick: _this6.handleCurrentLocation, type: 'button' },\n                                            'Set Location \\xA0 ',\n                                            _react2.default.createElement(\n                                                'span',\n                                                { className: 'glyphicon glyphicon-map-marker' },\n                                                ' '\n                                            )\n                                        ),\n                                        '\\xA0  \\xA0',\n                                        _react2.default.createElement(\n                                            'button',\n                                            { className: 'btn btn-primary crntlo', ref: 'crntloc', onClick: _this6.handleDyanamicLocation, type: 'button', title: 'Get notified as you move.' },\n                                            'Dynamic Alerts \\xA0 ',\n                                            _react2.default.createElement(\n                                                'span',\n                                                { className: 'glyphicon glyphicon-map-marker' },\n                                                ' '\n                                            )\n                                        ),\n                                        _react2.default.createElement('br', null),\n                                        _react2.default.createElement('br', null),\n                                        _react2.default.createElement('div', { id: 'googleMap', className: 'mapsize' }),\n                                        _react2.default.createElement('br', null)\n                                    )\n                                )\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-6 col-sm-6 proilecard' },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'title-col' },\n                                    'Subscribe Notification'\n                                ),\n                                _react2.default.createElement(_subscription2.default, null)\n                            )\n                        );\n                    } else {\n                        return _react2.default.createElement(\n                            'div',\n                            { className: 'col-md-12 col-sm-12' },\n                            _react2.default.createElement('div', { style: { 'height': '400px' } })\n                        );\n                    }\n                }()\n            );\n        }\n    }]);\n\n    return MainPage;\n}(_react.Component);\n\nexports.default = MainPage;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///81\n")}});