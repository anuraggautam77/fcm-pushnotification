webpackHotUpdate(0,{58:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRouterDom = __webpack_require__(3);\n\nvar _auth = __webpack_require__(59);\n\nvar _pubsubJs = __webpack_require__(12);\n\nvar _pubsubJs2 = _interopRequireDefault(_pubsubJs);\n\n__webpack_require__(61);\n\nvar _router = __webpack_require__(62);\n\nvar _router2 = _interopRequireDefault(_router);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar App = function (_Component) {\n    _inherits(App, _Component);\n\n    function App(props) {\n        _classCallCheck(this, App);\n\n        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\n        _this.state = {\n            \"isLoggedIn\": window.localStorage.getItem('isLoggedIn'),\n            \"unit\": \"N\", // 'M' is statute miles (default) , 'K' is kilometers  , 'N' is nautical miles\n            \"distanceupto\": 20\n        };\n        _this.mySubscriber = _this.mySubscriber.bind(_this);\n        _pubsubJs2.default.subscribe('IS_LOGIN', _this.mySubscriber);\n        _this.auth = new _auth.Auth();\n        if (_this.state.isLoggedIn) {\n            _this.auth.activeInterval(_this.props.history);\n        } else {\n            _this.auth.stopInterval();\n        }\n\n        return _this;\n    }\n\n    _createClass(App, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            this.getCurrentLoc(function () {\n                _this2.getcode();\n            });\n        }\n    }, {\n        key: 'checkDistanceBetweenlocation',\n        value: function checkDistanceBetweenlocation(oldloc, newloc) {\n\n            var lat1 = oldloc.split(\"--\")[0];\n            var lat2 = newloc.latitude;\n\n            var lon1 = oldloc.split(\"--\")[1];\n            var lon2 = newloc.longitude;\n\n            var radlat1 = Math.PI * lat1 / 180;\n            var radlat2 = Math.PI * lat2 / 180;\n            //  var radlon1 = Math.PI * lon1 / 180\n            // var radlon2 = Math.PI * lon2 / 180\n            var theta = lon1 - lon2;\n            var radtheta = Math.PI * theta / 180;\n            var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n            dist = Math.acos(dist);\n            dist = dist * 180 / Math.PI;\n            dist = dist * 60 * 1.1515;\n            if (this.state.unit === \"K\") {\n                dist = dist * 1.609344;\n            }\n            if (this.state.unit === \"N\") {\n                dist = dist * 0.8684;\n            }\n            console.log(\"Distance Differce b/w Location >>>:\" + dist);\n            return dist;\n        }\n    }, {\n        key: 'getCurrentLoc',\n        value: function getCurrentLoc(callback) {\n            var _this3 = this;\n\n            var distance;\n            if (navigator && navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function (position) {\n                    if (window.localStorage.getItem('clat-log') === null) {\n                        window.localStorage.setItem('clat-log', position.coords.latitude + \"--\" + position.coords.longitude);\n                        callback();\n                    } else {\n                        distance = _this3.checkDistanceBetweenlocation(window.localStorage.getItem('clat-log'), position.coords);\n                        if (distance > _this3.state.distanceupto) {\n                            window.localStorage.setItem('clat-log', position.coords.latitude + \"--\" + position.coords.longitude);\n                            console.log(\">>notification trigger\");\n                            callback();\n                        }\n                    }\n                }, function (error) {\n                    console.log(\"err>\", error);\n                }, { timeout: 10000 });\n\n                navigator.geolocation.watchPosition(function (position) {\n                    if (window.localStorage.getItem('clat-log') === null) {\n                        window.localStorage.setItem('clat-log', position.coords.latitude + \"--\" + position.coords.longitude);\n                        callback();\n                    } else {\n                        distance = _this3.checkDistanceBetweenlocation(window.localStorage.getItem('clat-log'), position.coords);\n\n                        if (distance > _this3.state.distanceupto) {\n                            window.localStorage.setItem('clat-log', position.coords.latitude + \"--\" + position.coords.longitude);\n                            console.log(\">>notification trigger\");\n                            callback();\n                        }\n                    }\n                }, function (error) {\n                    console.log(\"err>\", error);\n                });\n            } else {\n                console.log('Geolocation is not supported');\n            }\n        }\n    }, {\n        key: 'getcode',\n        value: function getcode() {\n            var _this4 = this;\n\n            var lat,\n                lng = '';\n            if (window.localStorage.getItem('clat-log') !== null) {\n                lat = window.localStorage.getItem('clat-log').split('--')[0];\n                lng = window.localStorage.getItem('clat-log').split('--')[1];\n                var geocoder = new google.maps.Geocoder();\n                var latlng = { lat: parseFloat(lat), lng: parseFloat(lng) };\n                geocoder.geocode({ 'location': latlng }, function (results, status) {\n                    if (status === 'OK') {\n                        _this4.getZipcode(results);\n                    } else {\n                        window.alert('Geocoder failed due to: ' + status);\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'getZipcode',\n        value: function getZipcode(place) {\n\n            var zipcodes = [];\n            if (Array.isArray(place)) {\n                for (var k = 0; k < place.length; k++) {\n                    for (var i = 0; i < place[k].address_components.length; i++) {\n                        for (var j = 0; j < place[k].address_components[i].types.length; j++) {\n                            if (place[k].address_components[i].types[j] === \"postal_code\") {\n                                zipcodes.push(place[k].address_components[i].long_name);\n                            }\n                        }\n                    }\n                }\n            } else {\n                for (var i = 0; i < place.address_components.length; i++) {\n                    for (var j = 0; j < place.address_components[i].types.length; j++) {\n                        if (place.address_components[i].types[j] === \"postal_code\") {\n                            zipcodes.push(place.address_components[i].long_name);\n                        }\n                    }\n                }\n            }\n\n            if (zipcodes.length > 0) {\n                window.localStorage.setItem('czipcodes', zipcodes[0]);\n                //Store in IndexDB\n                store.storeinIdb('moving');\n            } else {\n                window.localStorage.setItem('czipcodes', '');\n            }\n        }\n    }, {\n        key: 'saveCurrentLocation',\n        value: function saveCurrentLocation() {\n            if (window.localStorage.getItem('deviceToken') !== null && window.localStorage.getItem('plat-log') !== null) {\n                fetch('/api/whereiam', { method: 'post', headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        platlng: window.localStorage.getItem('plat-log'),\n                        pzipcodes: window.localStorage.getItem('pzipcodes'),\n                        userId: window.localStorage.getItem('userid'),\n                        token: window.localStorage.getItem('deviceToken'),\n                        time: new Date().toISOString()\n                    })\n                }).then(function (res) {\n                    return res.json();\n                }).then(function (json) {\n                    console.log(json);\n                });\n            }\n        }\n    }, {\n        key: 'mySubscriber',\n        value: function mySubscriber(msg, data) {\n\n            if (data.status) {\n                window.localStorage.setItem('accessToken', data.token);\n                window.localStorage.setItem('userid', data.userid);\n                window.localStorage.setItem('isLoggedIn', true);\n                this.auth.activeInterval(this.props.history);\n                //   this.saveCurrentLocation();\n            } else {\n                window.localStorage.removeItem('accessToken');\n                window.localStorage.removeItem('userid');\n                window.localStorage.removeItem('isLoggedIn');\n                this.auth.stopInterval();\n            }\n            this.isLoggedIn(data);\n        }\n    }, {\n        key: 'isLoggedIn',\n        value: function isLoggedIn(data) {\n            var boolFlag = window.localStorage.getItem('isLoggedIn');\n            if (data.hasOwnProperty('callback')) {\n                data.callback();\n            }\n\n            if (!data.status) {\n                _pubsubJs2.default.publish('IS_LOGOUT');\n            }\n\n            this.setState({\n                isLoggedIn: boolFlag !== null && boolFlag !== '' ? JSON.parse(boolFlag) : false\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_router2.default, { islogin: this.state.isLoggedIn })\n            );\n        }\n    }]);\n\n    return App;\n}(_react.Component);\n\nexports.default = (0, _reactRouterDom.withRouter)(App);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvc3JjL0FwcC5qcz9hMGY1Il0sIm5hbWVzIjpbIkFwcCIsInByb3BzIiwic3RhdGUiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwibXlTdWJzY3JpYmVyIiwiYmluZCIsIlB1YlN1YiIsInN1YnNjcmliZSIsImF1dGgiLCJBdXRoIiwiaXNMb2dnZWRJbiIsImFjdGl2ZUludGVydmFsIiwiaGlzdG9yeSIsInN0b3BJbnRlcnZhbCIsImdldEN1cnJlbnRMb2MiLCJnZXRjb2RlIiwib2xkbG9jIiwibmV3bG9jIiwibGF0MSIsInNwbGl0IiwibGF0MiIsImxhdGl0dWRlIiwibG9uMSIsImxvbjIiLCJsb25naXR1ZGUiLCJyYWRsYXQxIiwiTWF0aCIsIlBJIiwicmFkbGF0MiIsInRoZXRhIiwicmFkdGhldGEiLCJkaXN0Iiwic2luIiwiY29zIiwiYWNvcyIsInVuaXQiLCJjb25zb2xlIiwibG9nIiwiY2FsbGJhY2siLCJkaXN0YW5jZSIsIm5hdmlnYXRvciIsImdlb2xvY2F0aW9uIiwiZ2V0Q3VycmVudFBvc2l0aW9uIiwicG9zaXRpb24iLCJzZXRJdGVtIiwiY29vcmRzIiwiY2hlY2tEaXN0YW5jZUJldHdlZW5sb2NhdGlvbiIsImRpc3RhbmNldXB0byIsImVycm9yIiwidGltZW91dCIsIndhdGNoUG9zaXRpb24iLCJsYXQiLCJsbmciLCJnZW9jb2RlciIsImdvb2dsZSIsIm1hcHMiLCJHZW9jb2RlciIsImxhdGxuZyIsInBhcnNlRmxvYXQiLCJnZW9jb2RlIiwicmVzdWx0cyIsInN0YXR1cyIsImdldFppcGNvZGUiLCJhbGVydCIsInBsYWNlIiwiemlwY29kZXMiLCJBcnJheSIsImlzQXJyYXkiLCJrIiwibGVuZ3RoIiwiaSIsImFkZHJlc3NfY29tcG9uZW50cyIsImoiLCJ0eXBlcyIsInB1c2giLCJsb25nX25hbWUiLCJzdG9yZSIsInN0b3JlaW5JZGIiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInBsYXRsbmciLCJwemlwY29kZXMiLCJ1c2VySWQiLCJ0b2tlbiIsInRpbWUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJ0aGVuIiwicmVzIiwianNvbiIsIm1zZyIsImRhdGEiLCJ1c2VyaWQiLCJyZW1vdmVJdGVtIiwiYm9vbEZsYWciLCJoYXNPd25Qcm9wZXJ0eSIsInB1Ymxpc2giLCJzZXRTdGF0ZSIsInBhcnNlIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7O0lBQ01BLEc7OztBQUNGLGlCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUEsOEdBQ1RBLEtBRFM7O0FBRWYsY0FBS0MsS0FBTCxHQUFhO0FBQ1QsMEJBQWNDLE9BQU9DLFlBQVAsQ0FBb0JDLE9BQXBCLENBQTRCLFlBQTVCLENBREw7QUFFVCxvQkFBUSxHQUZDLEVBRUk7QUFDYiw0QkFBZ0I7QUFIUCxTQUFiO0FBS0EsY0FBS0MsWUFBTCxHQUFvQixNQUFLQSxZQUFMLENBQWtCQyxJQUFsQixPQUFwQjtBQUNBQywyQkFBT0MsU0FBUCxDQUFpQixVQUFqQixFQUE2QixNQUFLSCxZQUFsQztBQUNBLGNBQUtJLElBQUwsR0FBWSxJQUFJQyxVQUFKLEVBQVo7QUFDQSxZQUFJLE1BQUtULEtBQUwsQ0FBV1UsVUFBZixFQUEyQjtBQUN2QixrQkFBS0YsSUFBTCxDQUFVRyxjQUFWLENBQXlCLE1BQUtaLEtBQUwsQ0FBV2EsT0FBcEM7QUFDSCxTQUZELE1BRU87QUFDSCxrQkFBS0osSUFBTCxDQUFVSyxZQUFWO0FBQ0g7O0FBZGM7QUFnQmxCOzs7OzRDQUVtQjtBQUFBOztBQUVoQixpQkFBS0MsYUFBTCxDQUFtQixZQUFNO0FBQ3JCLHVCQUFLQyxPQUFMO0FBQ0gsYUFGRDtBQUlIOzs7cURBRTRCQyxNLEVBQVFDLE0sRUFBUTs7QUFFekMsZ0JBQUlDLE9BQU9GLE9BQU9HLEtBQVAsQ0FBYSxJQUFiLEVBQW1CLENBQW5CLENBQVg7QUFDQSxnQkFBSUMsT0FBT0gsT0FBT0ksUUFBbEI7O0FBRUEsZ0JBQUlDLE9BQU9OLE9BQU9HLEtBQVAsQ0FBYSxJQUFiLEVBQW1CLENBQW5CLENBQVg7QUFDQSxnQkFBSUksT0FBT04sT0FBT08sU0FBbEI7O0FBR0EsZ0JBQUlDLFVBQVVDLEtBQUtDLEVBQUwsR0FBVVQsSUFBVixHQUFpQixHQUEvQjtBQUNBLGdCQUFJVSxVQUFVRixLQUFLQyxFQUFMLEdBQVVQLElBQVYsR0FBaUIsR0FBL0I7QUFDQTtBQUNBO0FBQ0EsZ0JBQUlTLFFBQVFQLE9BQU9DLElBQW5CO0FBQ0EsZ0JBQUlPLFdBQVdKLEtBQUtDLEVBQUwsR0FBVUUsS0FBVixHQUFrQixHQUFqQztBQUNBLGdCQUFJRSxPQUFPTCxLQUFLTSxHQUFMLENBQVNQLE9BQVQsSUFBb0JDLEtBQUtNLEdBQUwsQ0FBU0osT0FBVCxDQUFwQixHQUF3Q0YsS0FBS08sR0FBTCxDQUFTUixPQUFULElBQW9CQyxLQUFLTyxHQUFMLENBQVNMLE9BQVQsQ0FBcEIsR0FBd0NGLEtBQUtPLEdBQUwsQ0FBU0gsUUFBVCxDQUEzRjtBQUNBQyxtQkFBT0wsS0FBS1EsSUFBTCxDQUFVSCxJQUFWLENBQVA7QUFDQUEsbUJBQU9BLE9BQU8sR0FBUCxHQUFhTCxLQUFLQyxFQUF6QjtBQUNBSSxtQkFBT0EsT0FBTyxFQUFQLEdBQVksTUFBbkI7QUFDQSxnQkFBSSxLQUFLL0IsS0FBTCxDQUFXbUMsSUFBWCxLQUFvQixHQUF4QixFQUE2QjtBQUN6QkosdUJBQU9BLE9BQU8sUUFBZDtBQUNIO0FBQ0QsZ0JBQUksS0FBSy9CLEtBQUwsQ0FBV21DLElBQVgsS0FBb0IsR0FBeEIsRUFBNkI7QUFDekJKLHVCQUFPQSxPQUFPLE1BQWQ7QUFDSDtBQUNESyxvQkFBUUMsR0FBUixDQUFZLHdDQUF3Q04sSUFBcEQ7QUFDQSxtQkFBT0EsSUFBUDtBQUVIOzs7c0NBRWFPLFEsRUFBVTtBQUFBOztBQUNwQixnQkFBSUMsUUFBSjtBQUNBLGdCQUFJQyxhQUFhQSxVQUFVQyxXQUEzQixFQUF3QztBQUNwQ0QsMEJBQVVDLFdBQVYsQ0FBc0JDLGtCQUF0QixDQUF5QyxVQUFDQyxRQUFELEVBQWM7QUFDbkQsd0JBQUkxQyxPQUFPQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixVQUE1QixNQUE0QyxJQUFoRCxFQUFzRDtBQUNsREYsK0JBQU9DLFlBQVAsQ0FBb0IwQyxPQUFwQixDQUE0QixVQUE1QixFQUF3Q0QsU0FBU0UsTUFBVCxDQUFnQnhCLFFBQWhCLEdBQTJCLElBQTNCLEdBQWtDc0IsU0FBU0UsTUFBVCxDQUFnQnJCLFNBQTFGO0FBQ0FjO0FBQ0gscUJBSEQsTUFHTztBQUNIQyxtQ0FBVyxPQUFLTyw0QkFBTCxDQUFrQzdDLE9BQU9DLFlBQVAsQ0FBb0JDLE9BQXBCLENBQTRCLFVBQTVCLENBQWxDLEVBQTJFd0MsU0FBU0UsTUFBcEYsQ0FBWDtBQUNBLDRCQUFJTixXQUFXLE9BQUt2QyxLQUFMLENBQVcrQyxZQUExQixFQUF3QztBQUNwQzlDLG1DQUFPQyxZQUFQLENBQW9CMEMsT0FBcEIsQ0FBNEIsVUFBNUIsRUFBd0NELFNBQVNFLE1BQVQsQ0FBZ0J4QixRQUFoQixHQUEyQixJQUEzQixHQUFrQ3NCLFNBQVNFLE1BQVQsQ0FBZ0JyQixTQUExRjtBQUNBWSxvQ0FBUUMsR0FBUixDQUFZLHdCQUFaO0FBQ0FDO0FBQ0g7QUFDSjtBQUVKLGlCQWJELEVBYUcsVUFBVVUsS0FBVixFQUFpQjtBQUNoQlosNEJBQVFDLEdBQVIsQ0FBWSxNQUFaLEVBQW9CVyxLQUFwQjtBQUVILGlCQWhCRCxFQWdCRyxFQUFDQyxTQUFTLEtBQVYsRUFoQkg7O0FBbUJBVCwwQkFBVUMsV0FBVixDQUFzQlMsYUFBdEIsQ0FBb0MsVUFBQ1AsUUFBRCxFQUFjO0FBQzlDLHdCQUFJMUMsT0FBT0MsWUFBUCxDQUFvQkMsT0FBcEIsQ0FBNEIsVUFBNUIsTUFBNEMsSUFBaEQsRUFBc0Q7QUFDbERGLCtCQUFPQyxZQUFQLENBQW9CMEMsT0FBcEIsQ0FBNEIsVUFBNUIsRUFBd0NELFNBQVNFLE1BQVQsQ0FBZ0J4QixRQUFoQixHQUEyQixJQUEzQixHQUFrQ3NCLFNBQVNFLE1BQVQsQ0FBZ0JyQixTQUExRjtBQUNBYztBQUNILHFCQUhELE1BR087QUFDSEMsbUNBQVcsT0FBS08sNEJBQUwsQ0FBa0M3QyxPQUFPQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixVQUE1QixDQUFsQyxFQUEyRXdDLFNBQVNFLE1BQXBGLENBQVg7O0FBRUEsNEJBQUlOLFdBQVcsT0FBS3ZDLEtBQUwsQ0FBVytDLFlBQTFCLEVBQXdDO0FBQ3BDOUMsbUNBQU9DLFlBQVAsQ0FBb0IwQyxPQUFwQixDQUE0QixVQUE1QixFQUF3Q0QsU0FBU0UsTUFBVCxDQUFnQnhCLFFBQWhCLEdBQTJCLElBQTNCLEdBQWtDc0IsU0FBU0UsTUFBVCxDQUFnQnJCLFNBQTFGO0FBQ0FZLG9DQUFRQyxHQUFSLENBQVksd0JBQVo7QUFDQUM7QUFDSDtBQUNKO0FBQ0osaUJBYkQsRUFhRyxVQUFVVSxLQUFWLEVBQWlCO0FBQ2hCWiw0QkFBUUMsR0FBUixDQUFZLE1BQVosRUFBb0JXLEtBQXBCO0FBQ0gsaUJBZkQ7QUFrQkgsYUF0Q0QsTUFzQ087QUFDSFosd0JBQVFDLEdBQVIsQ0FBWSw4QkFBWjtBQUNIO0FBSUo7OztrQ0FFUztBQUFBOztBQUNOLGdCQUFJYyxHQUFKO0FBQUEsZ0JBQVNDLE1BQU0sRUFBZjtBQUNBLGdCQUFJbkQsT0FBT0MsWUFBUCxDQUFvQkMsT0FBcEIsQ0FBNEIsVUFBNUIsTUFBNEMsSUFBaEQsRUFBc0Q7QUFDbERnRCxzQkFBTWxELE9BQU9DLFlBQVAsQ0FBb0JDLE9BQXBCLENBQTRCLFVBQTVCLEVBQXdDZ0IsS0FBeEMsQ0FBOEMsSUFBOUMsRUFBb0QsQ0FBcEQsQ0FBTjtBQUNBaUMsc0JBQU1uRCxPQUFPQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixVQUE1QixFQUF3Q2dCLEtBQXhDLENBQThDLElBQTlDLEVBQW9ELENBQXBELENBQU47QUFDQSxvQkFBSWtDLFdBQVcsSUFBSUMsT0FBT0MsSUFBUCxDQUFZQyxRQUFoQixFQUFmO0FBQ0Esb0JBQUlDLFNBQVMsRUFBQ04sS0FBS08sV0FBV1AsR0FBWCxDQUFOLEVBQXVCQyxLQUFLTSxXQUFXTixHQUFYLENBQTVCLEVBQWI7QUFDQUMseUJBQVNNLE9BQVQsQ0FBaUIsRUFBQyxZQUFZRixNQUFiLEVBQWpCLEVBQXVDLFVBQUNHLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUN4RCx3QkFBSUEsV0FBVyxJQUFmLEVBQXFCO0FBQ2pCLCtCQUFLQyxVQUFMLENBQWdCRixPQUFoQjtBQUNILHFCQUZELE1BRU87QUFDSDNELCtCQUFPOEQsS0FBUCxDQUFhLDZCQUE2QkYsTUFBMUM7QUFDSDtBQUNKLGlCQU5EO0FBUUg7QUFDSjs7O21DQUVVRyxLLEVBQU87O0FBRWQsZ0JBQUlDLFdBQVcsRUFBZjtBQUNBLGdCQUFJQyxNQUFNQyxPQUFOLENBQWNILEtBQWQsQ0FBSixFQUEwQjtBQUN0QixxQkFBSyxJQUFJSSxJQUFJLENBQWIsRUFBZ0JBLElBQUlKLE1BQU1LLE1BQTFCLEVBQWtDRCxHQUFsQyxFQUF1QztBQUNuQyx5QkFBSyxJQUFJRSxJQUFJLENBQWIsRUFBZ0JBLElBQUlOLE1BQU1JLENBQU4sRUFBU0csa0JBQVQsQ0FBNEJGLE1BQWhELEVBQXdEQyxHQUF4RCxFQUE2RDtBQUN6RCw2QkFBSyxJQUFJRSxJQUFJLENBQWIsRUFBZ0JBLElBQUlSLE1BQU1JLENBQU4sRUFBU0csa0JBQVQsQ0FBNEJELENBQTVCLEVBQStCRyxLQUEvQixDQUFxQ0osTUFBekQsRUFBaUVHLEdBQWpFLEVBQXNFO0FBQ2xFLGdDQUFJUixNQUFNSSxDQUFOLEVBQVNHLGtCQUFULENBQTRCRCxDQUE1QixFQUErQkcsS0FBL0IsQ0FBcUNELENBQXJDLE1BQTRDLGFBQWhELEVBQStEO0FBQzNEUCx5Q0FBU1MsSUFBVCxDQUFjVixNQUFNSSxDQUFOLEVBQVNHLGtCQUFULENBQTRCRCxDQUE1QixFQUErQkssU0FBN0M7QUFDSDtBQUNKO0FBQ0o7QUFDSjtBQUNKLGFBVkQsTUFVTztBQUNILHFCQUFLLElBQUlMLElBQUksQ0FBYixFQUFnQkEsSUFBSU4sTUFBTU8sa0JBQU4sQ0FBeUJGLE1BQTdDLEVBQXFEQyxHQUFyRCxFQUEwRDtBQUN0RCx5QkFBSyxJQUFJRSxJQUFJLENBQWIsRUFBZ0JBLElBQUlSLE1BQU1PLGtCQUFOLENBQXlCRCxDQUF6QixFQUE0QkcsS0FBNUIsQ0FBa0NKLE1BQXRELEVBQThERyxHQUE5RCxFQUFtRTtBQUMvRCw0QkFBSVIsTUFBTU8sa0JBQU4sQ0FBeUJELENBQXpCLEVBQTRCRyxLQUE1QixDQUFrQ0QsQ0FBbEMsTUFBeUMsYUFBN0MsRUFBNEQ7QUFDeERQLHFDQUFTUyxJQUFULENBQWNWLE1BQU1PLGtCQUFOLENBQXlCRCxDQUF6QixFQUE0QkssU0FBMUM7QUFDSDtBQUNKO0FBQ0o7QUFFSjs7QUFFRCxnQkFBSVYsU0FBU0ksTUFBVCxHQUFrQixDQUF0QixFQUF5QjtBQUNyQnBFLHVCQUFPQyxZQUFQLENBQW9CMEMsT0FBcEIsQ0FBNEIsV0FBNUIsRUFBeUNxQixTQUFTLENBQVQsQ0FBekM7QUFDQTtBQUNBVyxzQkFBTUMsVUFBTixDQUFpQixRQUFqQjtBQUNILGFBSkQsTUFJSztBQUNBNUUsdUJBQU9DLFlBQVAsQ0FBb0IwQyxPQUFwQixDQUE0QixXQUE1QixFQUF5QyxFQUF6QztBQUNKO0FBQ0o7Ozs4Q0FFcUI7QUFDbEIsZ0JBQUkzQyxPQUFPQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixhQUE1QixNQUErQyxJQUEvQyxJQUF1REYsT0FBT0MsWUFBUCxDQUFvQkMsT0FBcEIsQ0FBNEIsVUFBNUIsTUFBNEMsSUFBdkcsRUFBNkc7QUFDekcyRSxzQkFBTSxlQUFOLEVBQXVCLEVBQUNDLFFBQVEsTUFBVCxFQUFpQkMsU0FBUyxFQUFDLGdCQUFnQixrQkFBakIsRUFBMUI7QUFDbkJDLDBCQUFNQyxLQUFLQyxTQUFMLENBQWU7QUFDakJDLGlDQUFTbkYsT0FBT0MsWUFBUCxDQUFvQkMsT0FBcEIsQ0FBNEIsVUFBNUIsQ0FEUTtBQUVqQmtGLG1DQUFXcEYsT0FBT0MsWUFBUCxDQUFvQkMsT0FBcEIsQ0FBNEIsV0FBNUIsQ0FGTTtBQUdqQm1GLGdDQUFRckYsT0FBT0MsWUFBUCxDQUFvQkMsT0FBcEIsQ0FBNEIsUUFBNUIsQ0FIUztBQUlqQm9GLCtCQUFPdEYsT0FBT0MsWUFBUCxDQUFvQkMsT0FBcEIsQ0FBNEIsYUFBNUIsQ0FKVTtBQUtoQnFGLDhCQUFNLElBQUlDLElBQUosR0FBV0MsV0FBWDtBQUxVLHFCQUFmO0FBRGEsaUJBQXZCLEVBUUdDLElBUkgsQ0FRUTtBQUFBLDJCQUFPQyxJQUFJQyxJQUFKLEVBQVA7QUFBQSxpQkFSUixFQVEyQkYsSUFSM0IsQ0FRZ0MsZ0JBQVE7QUFDcEN2RCw0QkFBUUMsR0FBUixDQUFZd0QsSUFBWjtBQUNILGlCQVZEO0FBV0g7QUFDSjs7O3FDQUVZQyxHLEVBQUtDLEksRUFBTTs7QUFFcEIsZ0JBQUlBLEtBQUtsQyxNQUFULEVBQWlCO0FBQ2I1RCx1QkFBT0MsWUFBUCxDQUFvQjBDLE9BQXBCLENBQTRCLGFBQTVCLEVBQTJDbUQsS0FBS1IsS0FBaEQ7QUFDQXRGLHVCQUFPQyxZQUFQLENBQW9CMEMsT0FBcEIsQ0FBNEIsUUFBNUIsRUFBc0NtRCxLQUFLQyxNQUEzQztBQUNBL0YsdUJBQU9DLFlBQVAsQ0FBb0IwQyxPQUFwQixDQUE0QixZQUE1QixFQUEwQyxJQUExQztBQUNBLHFCQUFLcEMsSUFBTCxDQUFVRyxjQUFWLENBQXlCLEtBQUtaLEtBQUwsQ0FBV2EsT0FBcEM7QUFDQTtBQUNILGFBTkQsTUFNTztBQUNIWCx1QkFBT0MsWUFBUCxDQUFvQitGLFVBQXBCLENBQStCLGFBQS9CO0FBQ0FoRyx1QkFBT0MsWUFBUCxDQUFvQitGLFVBQXBCLENBQStCLFFBQS9CO0FBQ0FoRyx1QkFBT0MsWUFBUCxDQUFvQitGLFVBQXBCLENBQStCLFlBQS9CO0FBQ0EscUJBQUt6RixJQUFMLENBQVVLLFlBQVY7QUFDSDtBQUNELGlCQUFLSCxVQUFMLENBQWdCcUYsSUFBaEI7QUFDSDs7O21DQUNVQSxJLEVBQU07QUFDYixnQkFBSUcsV0FBV2pHLE9BQU9DLFlBQVAsQ0FBb0JDLE9BQXBCLENBQTRCLFlBQTVCLENBQWY7QUFDQSxnQkFBSTRGLEtBQUtJLGNBQUwsQ0FBb0IsVUFBcEIsQ0FBSixFQUFxQztBQUNqQ0oscUJBQUt6RCxRQUFMO0FBQ0g7O0FBRUQsZ0JBQUksQ0FBQ3lELEtBQUtsQyxNQUFWLEVBQWtCO0FBQ2R2RCxtQ0FBTzhGLE9BQVAsQ0FBZSxXQUFmO0FBQ0g7O0FBRUQsaUJBQUtDLFFBQUwsQ0FBYztBQUNWM0YsNEJBQWF3RixhQUFhLElBQWIsSUFBcUJBLGFBQWEsRUFBbkMsR0FBeUNoQixLQUFLb0IsS0FBTCxDQUFXSixRQUFYLENBQXpDLEdBQWdFO0FBRGxFLGFBQWQ7QUFHSDs7O2lDQUNRO0FBQ0wsbUJBQ1E7QUFBQTtBQUFBO0FBQ0ksOENBQUMsZ0JBQUQsSUFBUyxTQUFTLEtBQUtsRyxLQUFMLENBQVdVLFVBQTdCO0FBREosYUFEUjtBQUlIOzs7O0VBL01hNkYsZ0I7O2tCQWtOSCxnQ0FBV3pHLEdBQVgsQyIsImZpbGUiOiI1OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge1Byb3BUeXBlcywgQ29tcG9uZW50fSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHdpdGhSb3V0ZXIgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQge0F1dGh9IGZyb20gJy4vY29tbW9uL2F1dGgnO1xyXG5pbXBvcnQgUHViU3ViIGZyb20gJ3B1YnN1Yi1qcyc7XHJcbmltcG9ydCAnLi9zdHlsZS9jc3MvQXBwLnNjc3MnO1xyXG5pbXBvcnQgUm91dGluZyBmcm9tICcuL3JvdXRlci9yb3V0ZXInO1xyXG5jbGFzcyBBcHAgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgICAgICBzdXBlcihwcm9wcyk7XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgICAgICAgXCJpc0xvZ2dlZEluXCI6IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaXNMb2dnZWRJbicpLFxyXG4gICAgICAgICAgICBcInVuaXRcIjogXCJOXCIsIC8vICdNJyBpcyBzdGF0dXRlIG1pbGVzIChkZWZhdWx0KSAsICdLJyBpcyBraWxvbWV0ZXJzICAsICdOJyBpcyBuYXV0aWNhbCBtaWxlc1xyXG4gICAgICAgICAgICBcImRpc3RhbmNldXB0b1wiOiAyMFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5teVN1YnNjcmliZXIgPSB0aGlzLm15U3Vic2NyaWJlci5iaW5kKHRoaXMpO1xyXG4gICAgICAgIFB1YlN1Yi5zdWJzY3JpYmUoJ0lTX0xPR0lOJywgdGhpcy5teVN1YnNjcmliZXIpO1xyXG4gICAgICAgIHRoaXMuYXV0aCA9IG5ldyBBdXRoKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuaXNMb2dnZWRJbikge1xyXG4gICAgICAgICAgICB0aGlzLmF1dGguYWN0aXZlSW50ZXJ2YWwodGhpcy5wcm9wcy5oaXN0b3J5KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmF1dGguc3RvcEludGVydmFsKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcclxuXHJcbiAgICAgICAgdGhpcy5nZXRDdXJyZW50TG9jKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5nZXRjb2RlKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGNoZWNrRGlzdGFuY2VCZXR3ZWVubG9jYXRpb24ob2xkbG9jLCBuZXdsb2MpIHtcclxuXHJcbiAgICAgICAgbGV0IGxhdDEgPSBvbGRsb2Muc3BsaXQoXCItLVwiKVswXTtcclxuICAgICAgICBsZXQgbGF0MiA9IG5ld2xvYy5sYXRpdHVkZTtcclxuXHJcbiAgICAgICAgbGV0IGxvbjEgPSBvbGRsb2Muc3BsaXQoXCItLVwiKVsxXTtcclxuICAgICAgICBsZXQgbG9uMiA9IG5ld2xvYy5sb25naXR1ZGU7XHJcblxyXG5cclxuICAgICAgICB2YXIgcmFkbGF0MSA9IE1hdGguUEkgKiBsYXQxIC8gMTgwO1xyXG4gICAgICAgIHZhciByYWRsYXQyID0gTWF0aC5QSSAqIGxhdDIgLyAxODA7XHJcbiAgICAgICAgLy8gIHZhciByYWRsb24xID0gTWF0aC5QSSAqIGxvbjEgLyAxODBcclxuICAgICAgICAvLyB2YXIgcmFkbG9uMiA9IE1hdGguUEkgKiBsb24yIC8gMTgwXHJcbiAgICAgICAgdmFyIHRoZXRhID0gbG9uMSAtIGxvbjI7XHJcbiAgICAgICAgdmFyIHJhZHRoZXRhID0gTWF0aC5QSSAqIHRoZXRhIC8gMTgwO1xyXG4gICAgICAgIHZhciBkaXN0ID0gTWF0aC5zaW4ocmFkbGF0MSkgKiBNYXRoLnNpbihyYWRsYXQyKSArIE1hdGguY29zKHJhZGxhdDEpICogTWF0aC5jb3MocmFkbGF0MikgKiBNYXRoLmNvcyhyYWR0aGV0YSk7XHJcbiAgICAgICAgZGlzdCA9IE1hdGguYWNvcyhkaXN0KTtcclxuICAgICAgICBkaXN0ID0gZGlzdCAqIDE4MCAvIE1hdGguUEk7XHJcbiAgICAgICAgZGlzdCA9IGRpc3QgKiA2MCAqIDEuMTUxNTtcclxuICAgICAgICBpZiAodGhpcy5zdGF0ZS51bml0ID09PSBcIktcIikge1xyXG4gICAgICAgICAgICBkaXN0ID0gZGlzdCAqIDEuNjA5MzQ0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5zdGF0ZS51bml0ID09PSBcIk5cIikge1xyXG4gICAgICAgICAgICBkaXN0ID0gZGlzdCAqIDAuODY4NDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJEaXN0YW5jZSBEaWZmZXJjZSBiL3cgTG9jYXRpb24gPj4+OlwiICsgZGlzdCk7XHJcbiAgICAgICAgcmV0dXJuIGRpc3Q7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGdldEN1cnJlbnRMb2MoY2FsbGJhY2spIHtcclxuICAgICAgICB2YXIgZGlzdGFuY2U7XHJcbiAgICAgICAgaWYgKG5hdmlnYXRvciAmJiBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHtcclxuICAgICAgICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbigocG9zaXRpb24pID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NsYXQtbG9nJykgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NsYXQtbG9nJywgcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlICsgXCItLVwiICsgcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdGFuY2UgPSB0aGlzLmNoZWNrRGlzdGFuY2VCZXR3ZWVubG9jYXRpb24od2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjbGF0LWxvZycpLCBwb3NpdGlvbi5jb29yZHMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkaXN0YW5jZSA+IHRoaXMuc3RhdGUuZGlzdGFuY2V1cHRvKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY2xhdC1sb2cnLCBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUgKyBcIi0tXCIgKyBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCI+Pm5vdGlmaWNhdGlvbiB0cmlnZ2VyXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJlcnI+XCIsIGVycm9yKTtcclxuXHJcbiAgICAgICAgICAgIH0sIHt0aW1lb3V0OiAxMDAwMH0pO1xyXG5cclxuXHJcbiAgICAgICAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi53YXRjaFBvc2l0aW9uKChwb3NpdGlvbikgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY2xhdC1sb2cnKSA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY2xhdC1sb2cnLCBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUgKyBcIi0tXCIgKyBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlKTtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXN0YW5jZSA9IHRoaXMuY2hlY2tEaXN0YW5jZUJldHdlZW5sb2NhdGlvbih3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NsYXQtbG9nJyksIHBvc2l0aW9uLmNvb3Jkcyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkaXN0YW5jZSA+IHRoaXMuc3RhdGUuZGlzdGFuY2V1cHRvKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY2xhdC1sb2cnLCBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUgKyBcIi0tXCIgKyBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCI+Pm5vdGlmaWNhdGlvbiB0cmlnZ2VyXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImVycj5cIiwgZXJyb3IpXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0dlb2xvY2F0aW9uIGlzIG5vdCBzdXBwb3J0ZWQnKTtcclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Y29kZSgpIHtcclxuICAgICAgICB2YXIgbGF0LCBsbmcgPSAnJztcclxuICAgICAgICBpZiAod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjbGF0LWxvZycpICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGxhdCA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY2xhdC1sb2cnKS5zcGxpdCgnLS0nKVswXTtcclxuICAgICAgICAgICAgbG5nID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjbGF0LWxvZycpLnNwbGl0KCctLScpWzFdO1xyXG4gICAgICAgICAgICB2YXIgZ2VvY29kZXIgPSBuZXcgZ29vZ2xlLm1hcHMuR2VvY29kZXI7XHJcbiAgICAgICAgICAgIHZhciBsYXRsbmcgPSB7bGF0OiBwYXJzZUZsb2F0KGxhdCksIGxuZzogcGFyc2VGbG9hdChsbmcpfTtcclxuICAgICAgICAgICAgZ2VvY29kZXIuZ2VvY29kZSh7J2xvY2F0aW9uJzogbGF0bG5nfSwgKHJlc3VsdHMsIHN0YXR1cykgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gJ09LJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0WmlwY29kZShyZXN1bHRzKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmFsZXJ0KCdHZW9jb2RlciBmYWlsZWQgZHVlIHRvOiAnICsgc3RhdHVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBnZXRaaXBjb2RlKHBsYWNlKSB7XHJcblxyXG4gICAgICAgIHZhciB6aXBjb2RlcyA9IFtdO1xyXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHBsYWNlKSkge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IHBsYWNlLmxlbmd0aDsgaysrKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBsYWNlW2tdLmFkZHJlc3NfY29tcG9uZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcGxhY2Vba10uYWRkcmVzc19jb21wb25lbnRzW2ldLnR5cGVzLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwbGFjZVtrXS5hZGRyZXNzX2NvbXBvbmVudHNbaV0udHlwZXNbal0gPT09IFwicG9zdGFsX2NvZGVcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgemlwY29kZXMucHVzaChwbGFjZVtrXS5hZGRyZXNzX2NvbXBvbmVudHNbaV0ubG9uZ19uYW1lKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwbGFjZS5hZGRyZXNzX2NvbXBvbmVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcGxhY2UuYWRkcmVzc19jb21wb25lbnRzW2ldLnR5cGVzLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBsYWNlLmFkZHJlc3NfY29tcG9uZW50c1tpXS50eXBlc1tqXSA9PT0gXCJwb3N0YWxfY29kZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHppcGNvZGVzLnB1c2gocGxhY2UuYWRkcmVzc19jb21wb25lbnRzW2ldLmxvbmdfbmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHppcGNvZGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjemlwY29kZXMnLCB6aXBjb2Rlc1swXSk7XHJcbiAgICAgICAgICAgIC8vU3RvcmUgaW4gSW5kZXhEQlxyXG4gICAgICAgICAgICBzdG9yZS5zdG9yZWluSWRiKCdtb3ZpbmcnKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY3ppcGNvZGVzJywgJycpOyBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2F2ZUN1cnJlbnRMb2NhdGlvbigpIHtcclxuICAgICAgICBpZiAod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkZXZpY2VUb2tlbicpICE9PSBudWxsICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncGxhdC1sb2cnKSAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBmZXRjaCgnL2FwaS93aGVyZWlhbScsIHttZXRob2Q6ICdwb3N0JywgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbid9LFxyXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgICAgIHBsYXRsbmc6IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncGxhdC1sb2cnKSxcclxuICAgICAgICAgICAgICAgICAgICBwemlwY29kZXM6IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHppcGNvZGVzJyksXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJpZCcpLFxyXG4gICAgICAgICAgICAgICAgICAgIHRva2VuOiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2RldmljZVRva2VuJyksXHJcbiAgICAgICAgICAgICAgICAgICAgIHRpbWU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gcmVzLmpzb24oKSkudGhlbihqc29uID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGpzb24pO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBteVN1YnNjcmliZXIobXNnLCBkYXRhKSB7XHJcblxyXG4gICAgICAgIGlmIChkYXRhLnN0YXR1cykge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FjY2Vzc1Rva2VuJywgZGF0YS50b2tlbik7XHJcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcmlkJywgZGF0YS51c2VyaWQpO1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2lzTG9nZ2VkSW4nLCB0cnVlKTtcclxuICAgICAgICAgICAgdGhpcy5hdXRoLmFjdGl2ZUludGVydmFsKHRoaXMucHJvcHMuaGlzdG9yeSk7XHJcbiAgICAgICAgICAgIC8vICAgdGhpcy5zYXZlQ3VycmVudExvY2F0aW9uKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdhY2Nlc3NUb2tlbicpO1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXJpZCcpO1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ2lzTG9nZ2VkSW4nKTtcclxuICAgICAgICAgICAgdGhpcy5hdXRoLnN0b3BJbnRlcnZhbCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlzTG9nZ2VkSW4oZGF0YSk7XHJcbiAgICB9XHJcbiAgICBpc0xvZ2dlZEluKGRhdGEpIHtcclxuICAgICAgICB2YXIgYm9vbEZsYWcgPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2lzTG9nZ2VkSW4nKTtcclxuICAgICAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eSgnY2FsbGJhY2snKSkge1xyXG4gICAgICAgICAgICBkYXRhLmNhbGxiYWNrKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIWRhdGEuc3RhdHVzKSB7XHJcbiAgICAgICAgICAgIFB1YlN1Yi5wdWJsaXNoKCdJU19MT0dPVVQnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBpc0xvZ2dlZEluOiAoYm9vbEZsYWcgIT09IG51bGwgJiYgYm9vbEZsYWcgIT09ICcnKSA/IEpTT04ucGFyc2UoYm9vbEZsYWcpIDogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8Um91dGluZyBpc2xvZ2luPXt0aGlzLnN0YXRlLmlzTG9nZ2VkSW59IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj4pO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyKEFwcCk7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NsaWVudC9zcmMvQXBwLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///58\n")},81:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pubsubJs = __webpack_require__(12);\n\nvar _pubsubJs2 = _interopRequireDefault(_pubsubJs);\n\nvar _profilecard = __webpack_require__(82);\n\nvar _profilecard2 = _interopRequireDefault(_profilecard);\n\nvar _subscription = __webpack_require__(84);\n\nvar _subscription2 = _interopRequireDefault(_subscription);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MainPage = function (_Component) {\n    _inherits(MainPage, _Component);\n\n    function MainPage(props) {\n        _classCallCheck(this, MainPage);\n\n        var _this = _possibleConstructorReturn(this, (MainPage.__proto__ || Object.getPrototypeOf(MainPage)).call(this, props));\n\n        _this.state = {\n            currentuser: window.localStorage.getItem('userid'),\n            isnotify: 'dn',\n            alertmessage: '',\n            lng: '',\n            lat: '',\n            message: '',\n            city: ''\n\n        };\n        _pubsubJs2.default.subscribe('LANDING_MESSGAE', function (type, message) {\n            _this.setState({ \"alertmessage\": message, isnotify: 'alert alert-success bd' });\n        });\n\n        _pubsubJs2.default.subscribe('IS_LOGOUT', function (type, message) {\n            _this.setState({ \"currentuser\": false });\n        });\n\n        _this.handleCurrentLocation = _this.handleCurrentLocation.bind(_this);\n        _this.handleDyanamicLocation = _this.handleDyanamicLocation.bind(_this);\n\n        return _this;\n    }\n\n    _createClass(MainPage, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            if (this.state.currentuser !== null) {\n                fetch('/api/getsetlocation/' + this.state.currentuser, {\n                    method: 'get',\n                    headers: { 'Content-Type': 'application/json' }\n                }).then(function (res) {\n                    return res.json();\n                }).then(function (json) {\n\n                    if (json.list.length > 0) {\n                        window.localStorage.setItem('plat-log', json.list.plat + \"--\" + json.list.plng);\n                        window.localStorage.setItem('lat-log', json.list.lat + \"--\" + json.list.lng);\n                        window.localStorage.setItem('pzipcodes', json.list.pzipcodes);\n                        window.localStorage.setItem('zipcodes', json.list.zipcodes);\n                    }\n                    if (document.getElementById('id_address')) {\n                        _this2.initialize();\n                        _this2.setAutoComplete();\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize() {\n            this.drawMap();\n        }\n    }, {\n        key: 'setAutoComplete',\n        value: function setAutoComplete() {\n            var _this3 = this;\n\n            var input = document.getElementById('id_address');\n            var options = {\n                types: ['address']\n            };\n\n            var autocomplete = new google.maps.places.Autocomplete(input, options);\n            google.maps.event.addListener(autocomplete, 'place_changed', function (i, k) {\n                var place = autocomplete.getPlace();\n                // window.localStorage.setItem('lat-log', place.geometry.location.lat() + \"--\" + place.geometry.location.lng())\n                var zipcodes = _this3.getZipcode(place);\n                console.log(\"onchange\", zipcodes);\n                _this3.setState({ \"zipcodes\": zipcodes, \"lat\": place.geometry.location.lat(), \"lng\": place.geometry.location.lng() });\n                _this3.drawMap(place.geometry.location.lat(), place.geometry.location.lng());\n            });\n        }\n    }, {\n        key: 'getZipcode',\n        value: function getZipcode(place) {\n\n            var zipcodes = [];\n\n            if (Array.isArray(place)) {\n                for (var k = 0; k < place.length; k++) {\n                    for (var i = 0; i < place[k].address_components.length; i++) {\n                        for (var j = 0; j < place[k].address_components[i].types.length; j++) {\n                            if (place[k].address_components[i].types[j] == \"postal_code\") {\n                                // console.log(place[k].address_components[i].long_name);\n                                zipcodes.push(place[k].address_components[i].long_name);\n                            }\n                        }\n                    }\n                }\n            } else {\n                for (var i = 0; i < place.address_components.length; i++) {\n                    for (var j = 0; j < place.address_components[i].types.length; j++) {\n                        if (place.address_components[i].types[j] == \"postal_code\") {\n                            // console.log(place.address_components[i].long_name);\n                            zipcodes.push(place.address_components[i].long_name);\n                        }\n                    }\n                }\n            }\n\n            if (zipcodes.length > 0) {\n                return zipcodes[0];\n            } else {\n                return '';\n            }\n        }\n    }, {\n        key: 'drawMap',\n        value: function drawMap(lt, lg) {\n\n            var lat,\n                lng = '';\n            if (lt !== undefined && lt !== undefined) {\n                lat = lt;\n                lng = lg;\n            } else {\n                if (window.localStorage.getItem('lat-log') !== null) {\n                    lat = window.localStorage.getItem('lat-log').split('--')[0];\n                    lng = window.localStorage.getItem('lat-log').split('--')[1];\n                } else if (window.localStorage.getItem('plat-log') !== null) {\n                    lat = window.localStorage.getItem('plat-log').split('--')[0];\n                    lng = window.localStorage.getItem('plat-log').split('--')[1];\n                }\n            }\n\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), {\n                center: new google.maps.LatLng(parseFloat(lat), parseFloat(lng)),\n                zoom: 13\n            });\n        }\n    }, {\n        key: 'handleDyanamicLocation',\n        value: function handleDyanamicLocation() {\n            var _this4 = this;\n\n            if (this.state.lat !== '' && this.state.lng !== '') {\n                fetch('/api/whereiam', { method: 'post', headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        platlng: this.state.lat + '--' + this.state.lng,\n                        pzipcodes: this.state.zipcodes,\n                        userId: window.localStorage.getItem('userid'),\n                        token: window.localStorage.getItem('deviceToken'),\n                        time: new Date().toISOString()\n                    })\n                }).then(function (res) {\n                    return res.json();\n                }).then(function (json) {\n                    window.localStorage.setItem('pzipcodes', _this4.state.zipcodes);\n                    window.localStorage.setItem('plat-log', _this4.state.lat + '--' + _this4.state.lng);\n                    _this4.setState({ isnotify: 'alert alert-success bd', \"alertmessage\": 'Set Dyanamic location Scucessfully!!' });\n                    //Store in IndexDB\n                    store.storeinIdb('dyanamic');\n                });\n            }\n        }\n    }, {\n        key: 'handleCurrentLocation',\n        value: function handleCurrentLocation() {\n            var _this5 = this;\n\n            if (this.state.lat !== '' && this.state.lng !== '') {\n                fetch('/api/setnewlocation', { method: 'post', headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        latlng: this.state.lat + '--' + this.state.lng,\n                        zipcodes: this.state.zipcodes,\n                        userId: window.localStorage.getItem('userid'),\n                        token: window.localStorage.getItem('deviceToken'),\n                        time: new Date().toISOString()\n                    })\n                }).then(function (res) {\n                    return res.json();\n                }).then(function (json) {\n                    console.log(json);\n                    if (json.status === '200') {\n                        window.localStorage.setItem('zipcodes', _this5.state.zipcodes);\n                        window.localStorage.setItem('lat-log', _this5.state.lat + '--' + _this5.state.lng);\n                        _this5.setState({ isnotify: 'alert alert-success bd', \"alertmessage\": 'Set new location Scucessfully!!' });\n                        //Store in IndexDB\n                        //  store.storeinIdb();\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this6 = this;\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'main-landing row content' },\n                _react2.default.createElement('div', { className: 'banner-container' }),\n                _react2.default.createElement(\n                    'div',\n                    { className: ' ' + this.state.isnotify + ' ' },\n                    _react2.default.createElement(\n                        'strong',\n                        null,\n                        this.state.alertmessage\n                    )\n                ),\n                function () {\n                    if (_this6.state.currentuser) {\n                        return _react2.default.createElement(\n                            'div',\n                            { className: 'landing-page' },\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-6 col-sm-6' },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'title-col' },\n                                    'IQOS - Want to get notified about nearby Mobile Stores?'\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'panel panel-default' },\n                                    _react2.default.createElement(\n                                        'div',\n                                        { className: 'panel-heading' },\n                                        _react2.default.createElement(\n                                            'h5',\n                                            null,\n                                            _react2.default.createElement(\n                                                'b',\n                                                null,\n                                                'Please share your location. Application will auto notify, when we have Mobile store nearby'\n                                            ),\n                                            ' '\n                                        )\n                                    ),\n                                    _react2.default.createElement(\n                                        'div',\n                                        { className: 'panel-heading' },\n                                        _react2.default.createElement('br', null),\n                                        _react2.default.createElement('input', { ref: 'cityname', id: 'id_address', className: 'form-control input-first places-autocomplete', type: 'text', placeholder: 'City Name,Country Name' }),\n                                        _react2.default.createElement('br', null),\n                                        _react2.default.createElement(\n                                            'button',\n                                            { className: 'btn btn-primary crntlo', ref: 'crntloc', onClick: _this6.handleCurrentLocation, type: 'button' },\n                                            'Set Location \\xA0 ',\n                                            _react2.default.createElement(\n                                                'span',\n                                                { className: 'glyphicon glyphicon-map-marker' },\n                                                ' '\n                                            )\n                                        ),\n                                        '\\xA0  \\xA0',\n                                        _react2.default.createElement(\n                                            'button',\n                                            { className: 'btn btn-primary crntlo', ref: 'crntloc', onClick: _this6.handleDyanamicLocation, type: 'button', title: 'Get notified as you move.' },\n                                            'Dynamic Alerts \\xA0 ',\n                                            _react2.default.createElement(\n                                                'span',\n                                                { className: 'glyphicon glyphicon-map-marker' },\n                                                ' '\n                                            )\n                                        ),\n                                        _react2.default.createElement('br', null),\n                                        _react2.default.createElement('br', null),\n                                        _react2.default.createElement('div', { id: 'googleMap', className: 'mapsize' }),\n                                        _react2.default.createElement('br', null)\n                                    )\n                                )\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-6 col-sm-6 proilecard' },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'title-col' },\n                                    'Subscribe Notification'\n                                ),\n                                _react2.default.createElement(_subscription2.default, null)\n                            )\n                        );\n                    } else {\n                        return _react2.default.createElement(\n                            'div',\n                            { className: 'col-md-12 col-sm-12' },\n                            _react2.default.createElement('div', { style: { 'height': '400px' } })\n                        );\n                    }\n                }()\n            );\n        }\n    }]);\n\n    return MainPage;\n}(_react.Component);\n\nexports.default = MainPage;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///81\n")}});